<mvvm:MVVMWindow xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:mvvm="clr-namespace:MVVMSidekick.Views;assembly=MVVMSidekick"        
        xmlns:vm="clr-namespace:GreaterFileShare.Hosts.WPF.ViewModels" 
        xmlns:Glue="clr-namespace:GreaterFileShare.Hosts.WPF.Glue" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        x:Class="GreaterFileShare.Hosts.WPF.MainWindow"       
        MinHeight="640"  MinWidth="800" Height="800" Width="1024" Title="Greater File Share Host" >


    <mvvm:MVVMWindow.Resources >
        <Glue:TaskStateConverter x:Key="TaskStateConverter"/>
        <Glue:IsNotNullValueConverter x:Key="IsNotNullValueConverter"/>
        <Glue:IsNullValueConverter x:Key="IsNullValueConverter"/>
        <Glue:NotBoolValueConverter x:Key="NotBoolValueConverter"/>
        <vm:MainWindow_Model x:Key="DesignVM" />
        <DataTemplate x:Key="ShareFileTaskTemplate">
            <StackPanel Name="stackPanel"  Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"  Background="#30FFFFff" MinWidth="300" MinHeight="80">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ErrorStateGroup">

                        <VisualState x:Name="NoError">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="stackPanel">
                                    <EasingColorKeyFrame KeyTime="0" Value="#30FFFFFF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Error">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="stackPanel">
                                    <EasingColorKeyFrame KeyTime="0" Value="#70FFB3B3"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Hosting">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="stackPanel">
                                    <EasingColorKeyFrame KeyTime="0" Value="#70B3FFB3"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <i:Interaction.Triggers>
                    <ei:PropertyChangedTrigger Binding="{Binding Path=HasErrors}" >
                        <ei:GoToStateAction   StateName="{Binding Converter={StaticResource TaskStateConverter}}"/>
                    </ei:PropertyChangedTrigger>
                    <ei:PropertyChangedTrigger Binding="{Binding Path=IsHosting}" >
                        <ei:GoToStateAction   StateName="{Binding Converter={StaticResource TaskStateConverter}}"/>
                    </ei:PropertyChangedTrigger>
                </i:Interaction.Triggers>
                <TextBlock><Run Text="Port"/><Run Text="&#x9;&#x9;"/><Run Text="{Binding Port}"/></TextBlock>
                <TextBlock><Run Text="Path"/><Run Text="&#x9;&#x9;"/><Run Text="{Binding Path}" /></TextBlock>
                <TextBlock><Run Text="Is Hosting"/><Run Text="&#x9;"/><Run Text="{Binding IsHosting,Mode=OneWay}" /></TextBlock>
                <TextBlock><Run Text="Last Error"/><Run Text="&#x9;"/><Run Text="{Binding LastException.Message, Mode=OneWay}"/></TextBlock>
            </StackPanel>

        </DataTemplate>
        <DataTemplate x:Key="MessageItemTemplate">
            <Grid>
                <TextBlock><Run Text="{Binding Path=Time}"/><Run Text="&#x9;"/><Run Text="{Binding Path=Message}"/></TextBlock>
            </Grid>
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <StackPanel>

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </mvvm:MVVMWindow.Resources>


    <mvvm:MVVMWindow.Background>
        <ImageBrush ImageSource="Assets/hosting.jpg" Stretch="UniformToFill"/>
    </mvvm:MVVMWindow.Background>
    <Grid x:Name="grid" Background="#CCFFFFFF">

        <Grid.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="4" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Pink"/>
                <Setter Property="Background" Value="#33FFFFFF" />
            </Style>
        </Grid.Resources>


        <Grid.DataContext>
            <StaticResource ResourceKey="DesignVM"/>
        </Grid.DataContext>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="25*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="357"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="192*"/>
        </Grid.RowDefinitions>

        <Border  Grid.Row="0" Grid.ColumnSpan="1"  Background="#33FFFFFF" IsEnabled="{Binding CurrentTask, Converter={StaticResource IsNotNullValueConverter}, Mode=OneWay}" >
            <Grid VerticalAlignment="Center">
                <StackPanel>
                    <StackPanel.Resources >
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Margin" Value="4"/>
                        </Style>

                    </StackPanel.Resources>

                    <StackPanel>

                        <Label Content="Port"/>
                        <xctk:IntegerUpDown Minimum="0" Maximum="65535" Value="{Binding CurrentTask.Port, Mode=TwoWay}" HorizontalContentAlignment="Right" TextAlignment="Left" />
                    </StackPanel>
                    <StackPanel>
                        <Label Content="Path"/>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <TextBox IsReadOnly="True"  Text="{Binding CurrentTask.Path, Mode=OneWay}" IsEnabled="{Binding CurrentTask.IsHosting, Converter={StaticResource NotBoolValueConverter}, Mode=Default}"/>
                            <Button Grid.Column="1" Content="..." IsEnabled="{Binding CurrentTask.IsHosting, Converter={StaticResource NotBoolValueConverter}, Mode=Default}" />
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Margin" Value="4"  />
                                <Setter Property="Padding" Value="4" />
                            </Style>
                        </StackPanel.Resources>
                        <Button Command="{Binding  CurrentTask.CommandStartHosting}" Content="Start/Stop" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    </StackPanel>
                </StackPanel>
            </Grid>
        </Border>

        <Border Grid.Row="0" Grid.ColumnSpan="1" Grid.Column="2" Background="#33FFFFFF" >
            <Grid  Background="#33FFFFFF" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="7*"/>
                    <RowDefinition Height="55"/>
                </Grid.RowDefinitions>
                <ListBox 
                    Name="tasksList"
                    Margin="4" 
                    Background="#50ffffff" 
                    ItemsSource="{Binding HostingTasks}" 
                    SelectedItem="{Binding CurrentTask, Mode=TwoWay}" 
                    SelectedIndex="0" 
                    ItemTemplate="{DynamicResource ShareFileTaskTemplate}" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" 
                           >


                </ListBox>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="28" Margin="154,9,154,5" Width="102">
                    <Button Command="{Binding CommandNewHost}"  Padding="4"   Content="New Host Entry" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Border>

        <Border Grid.Row="2" Grid.ColumnSpan="3"  Background="#33FFFFFF" >
            <ListBox  Background="#33888888" ItemsSource="{Binding Messages}" SelectedIndex="{Binding CurrentMessageIndex, Mode=TwoWay}" ItemTemplate="{DynamicResource MessageItemTemplate}" SelectionChanged="ListBox_SelectionChanged"></ListBox>
        </Border>

        <GridSplitter Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="100" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext" />
        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext" />

    </Grid>
</mvvm:MVVMWindow>
